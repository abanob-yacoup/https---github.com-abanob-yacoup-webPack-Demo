/*! For license information please see script.bundle.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/assets/photo1.jpg":(e,t,r)=>{r.r(t),r.d(t,{default:()=>o});const o=r.p+"images/photo1.jpg"},"./src/component/header/style.scss":(e,t,r)=>{r.r(t)},"./src/style.css":(e,t,r)=>{r.r(t)},"./src/component/header/header.js":(e,t,r)=>{r.r(t),r("./src/component/header/style.scss");const o=document.createElement("header");o.innerHTML="WEBPACK DEMO",o.classList.add("info"),document.body.appendChild(o),console.log(new class{constructor(e,t){this.fname=e,this.lname=t}get fullname(){return this.fname+" "+this.lname}}("Abanoub","Yacoub"))},"./src/hello wolrd.js":(e,t,r)=>{r.r(t),r.d(t,{default:()=>o});const o=function(){console.log("hello world ")}},"./src/index.js":(e,t,r)=>{r.r(t);var o=r("./src/hello wolrd.js"),s=(r("./src/component/header/header.js"),r("./src/style.css"),r("./src/assets/photo1.jpg"));(0,o.default)();const n=document.createElement("img");n.src=s.default,document.body.appendChild(n)}},t={};function r(o){if(t[o])return t[o].exports;var s=t[o]={exports:{}};return e[o](s,s.exports,r),s.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r("./src/index.js")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,